{"id":"../node_modules/fbjs/lib/areEqual.js","dependencies":[{"name":"/Users/germini/Work/CMIOT/mock-data/package.json","includedInParent":true,"mtime":1573522828763},{"name":"/Users/germini/Work/CMIOT/mock-data/.babelrc","includedInParent":true,"mtime":1573203991202},{"name":"/Users/germini/Work/CMIOT/mock-data/node_modules/fbjs/package.json","includedInParent":true,"mtime":1570697558359}],"generated":{"js":"\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/fbjs/lib/areEqual.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}}],"sources":{"../node_modules/fbjs/lib/areEqual.js":"\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;"},"lineCount":123}},"error":null,"hash":"584c662ca77a5df47b994c112a0bb651","cacheData":{"env":{}}}