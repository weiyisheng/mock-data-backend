{"id":"../node_modules/relay-runtime/lib/query/fetchQuery.js","dependencies":[{"name":"/Users/germini/Work/CMIOT/mock-data/package.json","includedInParent":true,"mtime":1573522828763},{"name":"/Users/germini/Work/CMIOT/mock-data/.babelrc","includedInParent":true,"mtime":1573203991202},{"name":"/Users/germini/Work/CMIOT/mock-data/node_modules/relay-runtime/package.json","includedInParent":true,"mtime":1573204781327},{"name":"../store/RelayModernOperationDescriptor","loc":{"line":12,"column":23},"parent":"/Users/germini/Work/CMIOT/mock-data/node_modules/relay-runtime/lib/query/fetchQuery.js","resolved":"/Users/germini/Work/CMIOT/mock-data/node_modules/relay-runtime/lib/store/RelayModernOperationDescriptor.js"},{"name":"./RelayModernGraphQLTag","loc":{"line":15,"column":24},"parent":"/Users/germini/Work/CMIOT/mock-data/node_modules/relay-runtime/lib/query/fetchQuery.js","resolved":"/Users/germini/Work/CMIOT/mock-data/node_modules/relay-runtime/lib/query/RelayModernGraphQLTag.js"}],"generated":{"js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _require = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require.createOperationDescriptor;\n\nvar _require2 = require('./RelayModernGraphQLTag'),\n    getRequest = _require2.getRequest;\n\n/**\n * A helper function to fetch the results of a query. Note that results for\n * fragment spreads are masked: fields must be explicitly listed in the query in\n * order to be accessible in the result object.\n */\nfunction fetchQuery(environment, taggedNode, variables, cacheConfig) {\n  var query = getRequest(taggedNode);\n\n  if (query.params.operationKind !== 'query') {\n    throw new Error('fetchQuery: Expected query operation');\n  }\n\n  var operation = createOperationDescriptor(query, variables);\n  return environment.execute({\n    operation: operation,\n    cacheConfig: cacheConfig\n  }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).toPromise();\n}\n\nmodule.exports = fetchQuery;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/relay-runtime/lib/query/fetchQuery.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"../node_modules/relay-runtime/lib/query/fetchQuery.js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _require = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require.createOperationDescriptor;\n\nvar _require2 = require('./RelayModernGraphQLTag'),\n    getRequest = _require2.getRequest;\n\n/**\n * A helper function to fetch the results of a query. Note that results for\n * fragment spreads are masked: fields must be explicitly listed in the query in\n * order to be accessible in the result object.\n */\nfunction fetchQuery(environment, taggedNode, variables, cacheConfig) {\n  var query = getRequest(taggedNode);\n\n  if (query.params.operationKind !== 'query') {\n    throw new Error('fetchQuery: Expected query operation');\n  }\n\n  var operation = createOperationDescriptor(query, variables);\n  return environment.execute({\n    operation: operation,\n    cacheConfig: cacheConfig\n  }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).toPromise();\n}\n\nmodule.exports = fetchQuery;"},"lineCount":39}},"error":null,"hash":"b03330606fd60d3d7dee9927c59c2262","cacheData":{"env":{}}}